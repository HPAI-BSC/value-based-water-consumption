
habitatges-own [
  ;paràmetres interns
  tipus-habitatge
  habitants
  tipus-renda
  renda
  valors
  rec-jardi?
  piscina-on?
  piscina
  
  ;---llistes per al càlcul de consums---
  volum-consumit
  us-setmanal
  us-diari
  durada-usos
  consums-piscina
  
  ;probabilitats setmanals
  dutxes-setmana
  rentaplats-setmana
  rentadores-setmana
 
  ;probabilitats diàries (en quins moments es duen a terme consums reiteratius durant el dia)
  cadenes-dia
  pica-dia
  
  ;probabilitats diàries (en quina hora es duu a terme un consum que en cas de fer-se només s'executa un cop al dia?)
  hora-dutxa
  hora-rentaplats
  hora-rentadora
  hores-jardí
  
  ;per als consums que duren >15'
  distr-rentaplats
  distr-rentadora
  distr-jardí
  
  ;per al canvi de consums
  consum-setmanal-propi
  consum-setmanal-anterior
  consum-mensual-propi
  consum-mens-vall
  consum-mens-plana
  consum-mens-punta
  consum-anual-propi
  factura-anual
  
  ;disposició a canvis
  voluntat-canvis
  voluntat-c-horaris
  situació-inelàstica
  
  ;tarifa discriminació horària
  consum-punta
  consum-plana
  consum-vall
  
  ;tarifa per trams
  tram-actual
  
  ;canvis de consum
  canvis-dispositius
  canvis-pràctiques
  canvis-horaris
  recompte-dispositius
  recompte-pràctiques
  recompte-horaris
  
  horari-rec
  recompte-setmanes
]


to probabilitats-setmanals
  ;---s'ecull el dia que no hi ha dutxa---
  ask habitatges [
    set dutxes-setmana replace-item (random 7) [ true true true true true true true ] false
    if (estació != "Estiu")[
      if (habitants - 1 > 0) [
        let dutxes-membre replace-item (random 7) [ true true true true true true true ] false
        set dutxes-setmana (list dutxes-setmana dutxes-membre )
      ]
      if (habitants - 2 > 0) [
        repeat (habitants - 2) [
          let dutxes-membre replace-item (random 7) [ true true true true true true true ] false  
          set dutxes-setmana lput dutxes-membre dutxes-setmana  
        ]
      ]
    ]
    if (estació = "Estiu")[
      if (habitants - 1 > 0) [
        (ifelse random-float 100 < 95
          [
            let dutxes-membre [ true true true true true true true ]
            set dutxes-setmana (list dutxes-setmana dutxes-membre )
          ]
          [
            let dutxes-membre replace-item (random 7) [ true true true true true true true ] false
            set dutxes-setmana (list dutxes-setmana dutxes-membre )
          ]
        )
      ]
      if (habitants - 2 > 0) [
        repeat (habitants - 2) [
          (ifelse random-float 100 < 95
            [
              let dutxes-membre [ true true true true true true true ]
              set dutxes-setmana lput dutxes-membre dutxes-setmana
            ]
            [
              let dutxes-membre replace-item (random 7) [ true true true true true true true ] false  
              set dutxes-setmana lput dutxes-membre dutxes-setmana  
            ]
          )
          ]
        ] 
      ]
    ]
  
  ;---s'escullen els dies que es posa el rentaplats, amb una diferencia de 4 dies entre ells si són 2---
  ask habitatges [
    set rentaplats-setmana replace-item (random 7) [false false false false false false false] true
    while [length (filter [i -> i = true] rentaplats-setmana) < item 1 us-setmanal ] [     
      let aux random 7
      while [item aux rentaplats-setmana = true ][
      set aux random 7
      ]
      set rentaplats-setmana replace-item (aux) rentaplats-setmana true
    ]
  ]
  
  ;---s'escullen els dies que es posa la rentadora, amb una diferencia de 4 dies entre ells si són 2---
  ask habitatges [
    set rentadores-setmana replace-item (random 7) [false false false false false false false] true
    while [length (filter [i -> i = true] rentadores-setmana) < item 2 us-setmanal ] [     
      let aux random 7
      while [item aux rentadores-setmana = true ][
        set aux random 7
      ]
      set rentadores-setmana replace-item (aux) rentadores-setmana true
    ]
  ]
end

to probabilitats-diàries
  probabilitats-cadena
  probabiltats-pica
  probabilitats-dutxa
  probabilitats-rentaplats
  probabilitats-rentadora
  probabilitats-jardí
end


to probabilitats-cadena
  ;---probabilitats de tirar la cadena---
  let franja-horaria (list  0      1      2       3       4       5       6      7      8      9      10     11     12     13     14     15     16     17     18     19     20     21     22     23 )
  let pesos          (list  10     10     5       5       5       5      10     10      20     20     20     10     10     10     10     10     10     10     10     10     10     10     10     10 )  
  let combinat (map list franja-horaria pesos)

  ask habitatges [
    set cadenes-dia map first rnd:weighted-n-of-list-with-repeats ( ( item 3 us-diari) * habitants) combinat  [ [p] -> last p ]
    set cadenes-dia map [ x -> x + one-of [0 0.15 0.30 0.45] ] cadenes-dia
  ]
end

to probabiltats-pica
  ;---probabilitats de fer ús de la pica---
  let franja-horaria (list     6      7      8      9      10     11     12     13     14     15     16     17     18     19     20     21     22     23   )
  let pesos          (list     5      5      10     10     5      5      5      5      5      5      5      5      5      5      5      10     10     10   )  
  let combinat (map list franja-horaria pesos)
  
  ask habitatges [
    set pica-dia map first rnd:weighted-n-of-list-with-repeats ( ( item 4 us-diari) * habitants) combinat  [ [p] -> last p ]
    set pica-dia map [ x -> x + one-of [0 0.15 0.30 0.45] ] pica-dia
  ]
end


to probabilitats-dutxa
 ask habitatges
  [
    let franja-horaria (list  5      6      7      8      9      10     11     12     13     14     15     16     17     18     19     20     21     22     23 )   
    let pesos          (list  0      10     10     20     20     5      5      5      5      5      5      5      5      5      5      5      10     0      0  )  
    
    if (Tipus-de-tarifa = "Discriminació horària 1") [
      if item 0 canvis-horaris = 1 [
        set pesos        (list  10     5      5      5      5      5      5      10     10     10     10     10     10     10     10     15     0      15     15 )
      ]
    ]
    
    let combinat (map list franja-horaria pesos)
    
    if (habitants = 1)[
    (ifelse
        (item (time:get "dayofweek" temps-actual - 1) dutxes-setmana)  = false [set hora-dutxa "avui_no"]
        (item (time:get "dayofweek" temps-actual - 1) dutxes-setmana)  = true [
          set hora-dutxa first rnd:weighted-one-of-list combinat [ [p] -> last p ]
          set hora-dutxa (hora-dutxa + one-of [0 0.15 0.30 0.45])        
        ]
     )
    ]
    
    if (habitants > 1) [
      set hora-dutxa []
      let index 0
    
      repeat (habitants)[
      (ifelse
        (item (time:get "dayofweek" temps-actual - 1) (item index dutxes-setmana))  = false [set hora-dutxa lput "avui_no" hora-dutxa]
        (item (time:get "dayofweek" temps-actual - 1) (item index dutxes-setmana))  = true [
          let aux-hora-dutxa first rnd:weighted-one-of-list combinat [ [p] -> last p ]
          set aux-hora-dutxa (aux-hora-dutxa + one-of [0 0.15 0.30 0.45])
          set hora-dutxa lput aux-hora-dutxa hora-dutxa
        ]
       )
       set index index + 1
      ]
    ]
  ]
end


to probabilitats-rentaplats
  ask habitatges
  [
    let franja-horaria (list  8      9      10     11     12     13     14     15     16     17    18     19     20     21     22     23   )
    let pesos          (list  5      5      5      5      5      10     20     20     20     10    5      5      5      10     20     20   )  
    
    if (Tipus-de-tarifa = "Discriminació horària 1") [
      if item 1 canvis-horaris = 1 [
        set pesos        (list  0      0      0      5      5      5      5      5      5      5     5      5      5      0      20     20   )
      ]
    ]    
        
    let combinat (map list franja-horaria pesos)
    (ifelse
     ( item (time:get "dayofweek" temps-actual - 1) rentaplats-setmana ) = false [ set hora-rentaplats "avui no" ]
     ( item (time:get "dayofweek" temps-actual - 1) rentaplats-setmana ) = true  [
        set hora-rentaplats first rnd:weighted-one-of-list combinat [ [p] -> last p ]
        set hora-rentaplats (hora-rentaplats + one-of [0 0.15 0.30 0.45])
      ]
    )
  ]
end


to probabilitats-rentadora
  ask habitatges
  [
    let franja-horaria (list  8      9      10     11     12     13     14     15     16     17    18     19     20     21     22    23)
    let pesos          (list  5      5      5      5      5      10     20     20     20     10    5      5      5      10     20    0 )
  
    if (Tipus-de-tarifa = "Discriminació horària 1") [
      if item 2 canvis-horaris = 1 [
        set pesos        (list  0      0      0      5      5      5      5      5      5      5     5      5      5      0      20    15 )
      ]
    ]
    
    let combinat (map list franja-horaria pesos)
    (ifelse
     (item (time:get "dayofweek" temps-actual - 1) rentadores-setmana) = false [ set hora-rentadora "avui no" ]
     (item (time:get "dayofweek" temps-actual - 1) rentadores-setmana) = true  [
        set hora-rentadora first rnd:weighted-one-of-list combinat [ [p] -> last p ]
        set hora-rentadora (hora-rentadora + one-of [0 0.15 0.30 0.45])
      ]
    )
  ]
end


to probabilitats-jardí
  ;augment i disminucions progressives de rec
  if (estació = "Primavera") [
    if time:is-between? temps-actual (time:create "2015/03/21 00:00") (time:create "2015/05/21 00:00")  
    [ ask up-to-n-of 3 habitatges with [rec-jardi? = false] [set rec-jardi? true] ]
    if time:is-between? temps-actual (time:create "2015/05/21 00:00") (time:create "2015/06/21 00:00")  
    [ ask up-to-n-of 4 habitatges with [rec-jardi? = false] [set rec-jardi? true] ]
  ]
   
  if time:is-after? temps-actual (time:create "2015/09/01 00:00") [
    ask up-to-n-of 2 habitatges with [rec-jardi? = true] [set rec-jardi? false]
  ]
  
  
  ;augment i disminucions progressives de consum de rec
  if time:is-between? temps-actual (time:create "2015/06/01 00:00") (time:create "2015/06/30 00:00")  [
    ask up-to-n-of 5 habitatges with [item 5 volum-consumit = 60 ] [set volum-consumit replace-item 5 volum-consumit 120]
    ask up-to-n-of 5 habitatges with [item 5 volum-consumit = 200] [set volum-consumit replace-item 5 volum-consumit 400]
  ]
  
  if time:is-equal? temps-actual (time:create "2015/06/30 00:00")  [
    ask habitatges with [item 5 volum-consumit = 60 ] [set volum-consumit replace-item 5 volum-consumit 120]
    ask habitatges with [item 5 volum-consumit = 200] [set volum-consumit replace-item 5 volum-consumit 400]
  ]
  if time:is-after? temps-actual (time:create "2015/09/01 00:00")  [
    ask up-to-n-of 3 habitatges with [item 5 volum-consumit = 120] [set volum-consumit replace-item 5 volum-consumit 60 ]
    ask up-to-n-of 2 habitatges with [item 5 volum-consumit = 400] [set volum-consumit replace-item 5 volum-consumit 200]
  ]
  
  ;selecció d'horaris
  ask habitatges with [tipus-habitatge != "alta densitat"] [
    (ifelse 
      horari-rec != "nocturn" and horari-rec != "matinada" [
        let franja-horaria 0
        let pesos 0
        
        if Tipus-de-tarifa != "Discriminació horària" [
          set franja-horaria (list  0      1      2       3       4       5       6      7      8      9      10     11     12     13     14     15     16     17     18     19     20     21     22     23 )
          set pesos          (list  25     10     10      10      10      10      15     15     15     10      5      5      5      0      0      0      0      0      5      5      5     10     15     25 )
        ]
        if (Tipus-de-tarifa = "Discriminació horària") [
          set franja-horaria (list  0      1      2       3       4       5       6       21     22     23 )
          set pesos          (list  25     10     10      10      10      10      15      10     15     25 )
        ]
        let combinat (map list franja-horaria pesos)
        set hores-jardí first rnd:weighted-one-of-list combinat [ [p] -> last p ]
      ]
      horari-rec = "nocturn" [set hores-jardí one-of [21 22 23 0 1 ] ]
      horari-rec = "matinada" [set hores-jardí one-of [ 2  3  4 5 6 ] ]
    )
    set hores-jardí (hores-jardí + one-of [0 0.15 0.30 0.45])
  ]
end

to probabilitats-piscina
  if time:is-between? temps-actual (time:create "2015/06/01 00:00") (time:create "2015/06/21 00:00")  
  [ask up-to-n-of 3 habitatges with [piscina = true] [set piscina-on? true]]
  
  if time:is-after? temps-actual (time:create "2015/09/15 00:00")  
  [ask up-to-n-of 2 habitatges with [piscina = true] [set piscina-on? false]]
 
end

